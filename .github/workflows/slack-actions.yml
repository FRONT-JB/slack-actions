name: Send PR Notification to Slack
on:
  pull_request:
    types: [opened, edited]

env:
  SLACK_USERS: '{"FRONT-JB": "@U04602RGKRR", "jeonbg": "@U046CPX6QCR"}'

jobs:
  notify_slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install Dependencies
        run: npm install -g jq

      - name: Send Notification to Slack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERS: ${{ env.SLACK_USERS }}
        run: |
          PULL_REQUEST_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)
          REPO_NAME=$(jq --raw-output .repository.name $GITHUB_EVENT_PATH)

          PULL_REQUEST=$(curl --silent -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PULL_REQUEST_NUMBER")

          PULL_REQUEST_REVIEW=$(curl --silent -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PULL_REQUEST_NUMBER/reviews")

          PULL_REQUEST_COMMENTS=$(curl --silent -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$PULL_REQUEST_NUMBER/comments")

          AUTHOR=$(echo $PULL_REQUEST | jq --raw-output .user.login)
          TITLE=$(echo $PULL_REQUEST | jq --raw-output .title)

          BODY=$(echo $PULL_REQUEST | jq --raw-output .body)
          COMMIT_COUNT=$(echo $PULL_REQUEST | jq --raw-output .commits)

          CREATED_AT=$(echo $PULL_REQUEST | jq --raw-output .created_at)

          REVIEWER_NAMES=$(echo $PULL_REQUEST_REVIEW | jq '.[].user.login')
          USER_MAPPING=${SLACK_USERS}
          SLACK_REVIEWERS=$(echo $REVIEWER_NAMES | jq -r '. as $arr | $arr | map(select(. != null and length > 0)) | map($arr | index(.) as $ix | env.SLACK_USERS | split(" ") | map(select(length > 0))[($ix % length)] ) | join(", ")')

          MESSAGE=$(cat <<EOF
          {
            "text": "New pull request opened in <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/pull/$PULL_REQUEST_NUMBER|$REPO_NAME>: <$PULL_REQUEST.html_url|$TITLE>\nAuthor: @$AUTHOR\nReviewers: $SLACK_REVIEWERS\n\n$BODY\n\nCommits: $COMMIT_COUNT\nOpened at: $CREATED_AT"
          }
          EOF
          )

          curl -s -X POST -H "Content-Type: application/json" -d "$MESSAGE" "${SLACK_WEBHOOK_URL}"
