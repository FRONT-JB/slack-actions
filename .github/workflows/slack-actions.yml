name: Notify PR Activities to Slack

on:
  pull_request:
    types: [opened, reopened, closed, ready_for_review]
  pull_request_review:
    types: [submitted]
  issue_comment:
    types: [created]

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  USER_MAPPING: '{"githubId1": "@slackId1", "githubId2": "@slackId2"}'

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Map GitHub IDs to Slack IDs
        run: |
          SLACK_USERS=$(echo "$USER_MAPPING" | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]')
          SLACK_USERS="${SLACK_USERS//$'\n'/ }"
          echo "::set-env name=SLACK_USERS::$SLACK_USERS"

      - name: Get PR Information
        id: pr-info
        uses: sdras/github-action-get-PR-details@v1.5.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Format PR Information
        id: pr-format
        run: |
          PR_TITLE=$(echo "${{ steps.pr-info.outputs.PR_title }}" | sed 's/"/\\"/g')
          PR_BODY=$(echo "${{ steps.pr-info.outputs.PR_body }}" | sed 's/"/\\"/g')
          PR_URL=${{ steps.pr-info.outputs.PR_url }}
          PR_COMMITS=${{ steps.pr-info.outputs.PR_commits }}

          REVIEWER=$(echo "${{ steps.pr-info.outputs.PR_reviewer }}" | sed 's/"/\\"/g')
          REVIEWER=${{ env.SLACK_USERS[${REVIEWER}] }}

          CREATED_AT=$(echo "${{ steps.pr-info.outputs.PR_created_at }}" | sed 's/"/\\"/g')

          if [ -z "$REVIEWER" ]; then
            MESSAGE="*New PR opened*\n*$PR_TITLE*\n$PR_BODY\n$PR_URL\nCommits: $PR_COMMITS\nCreated at: $CREATED_AT"
          else
            MESSAGE="<$PR_URL|*New review*> on *$PR_TITLE* by $REVIEWER\nCreated at: $CREATED_AT"
          fi

          echo "::set-env name=MESSAGE::$MESSAGE"

      - name: Post message to Slack
        run: |
          message="{\"text\": \"$MESSAGE\"}"
          if [ ! -z "$REVIEWER" ]; then
            message="{\"text\": \"$MESSAGE\", \"thread_ts\": \"${{ steps.pr-info.outputs.PR_id }}\"}"
          fi

          curl -s -X POST -H "Content-Type: application/json" -d "$message" "${{ env.SLACK_WEBHOOK_URL }}"
